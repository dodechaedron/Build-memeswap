{"version":3,"sources":["views/Pool/index.tsx"],"names":["Body","styled","CardBody","_ref","theme","colors","backgroundAlt","Pool","account","useActiveWeb3React","t","useTranslation","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","map","tokens","liquidityToken","toV2LiquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","useTokenBalancesWithLoadingIndicator","undefined","liquidityTokensWithBalances","filter","_ref2","_v2PairsBalances$liqu","address","greaterThan","v2Pairs","usePairs","_ref3","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","_ref4","pair","v2Pair","Boolean","_jsx","Page","children","_jsxs","AppBody","AppHeader","title","subtitle","Text","color","textAlign","Dots","index","FullPositionCard","mb","Flex","flexDirection","alignItems","mt","Button","id","variant","scale","as","Link","to","CardFooter","style","width","startIcon","AddIcon"],"mappings":"8HAAA,oKAeA,MAAMA,EAAOC,YAAOC,IAAS;sBACPC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC;EAGnC,SAASC,IACtB,MAAM,QAAEC,GAAYC,eACd,EAAEC,GAAMC,cAGRC,EAAoBC,cACpBC,EAAgCC,mBACpC,IAAMH,EAAkBI,KAAKC,IAAM,CAAQC,eAAgBC,YAAmBF,GAASA,cACvF,CAACL,IAEGQ,EAAkBL,mBACtB,IAAMD,EAA8BE,KAAKK,GAAUA,EAAMH,kBACzD,CAACJ,KAEIQ,EAAiBC,GAA0BC,YACzC,OAAPhB,QAAO,IAAPA,SAAWiB,EACXL,GAIIM,EAA8BX,mBAClC,IACED,EAA8Ba,QAAOC,IAAA,IAAAC,EAAA,IAAC,eAAEX,GAAgBU,EAAA,OACf,QADeC,EACtDP,EAAgBJ,EAAeY,gBAAQ,IAAAD,OAAA,EAAvCA,EAAyCE,YAAY,SAEzD,CAACjB,EAA+BQ,IAG5BU,EAAUC,YAASP,EAA4BV,KAAIkB,IAAA,IAAC,OAAEjB,GAAQiB,EAAA,OAAKjB,MACnEkB,EACJZ,IAAiC,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAASI,QAASV,EAA4BU,SAAiB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,MAAMC,IAAYA,KAEzGC,EAA0BP,EAAQhB,KAAIwB,IAAA,IAAE,CAAEC,GAAKD,EAAA,OAAKC,KAAMd,QAAQe,GAA2BC,QAAQD,KAiC3G,OACEE,cAACC,IAAI,CAAAC,SACHC,eAACC,IAAO,CAAAF,SAAA,CACNF,cAACK,IAAS,CAACC,MAAM,iBAAiBC,SAAS,4CAC3CJ,eAAC/C,EAAI,CAAA8C,SAAA,CAlCJtC,EAOD2B,EAEAS,cAACQ,KAAI,CAACC,MAAM,aAAaC,UAAU,SAAQR,SACzCF,cAACW,IAAI,CAAAT,SAAC,eAIe,OAAvBP,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBH,QAAS,EAC7BG,EAAwBvB,KAAI,CAAC0B,EAAQc,IAC1CZ,cAACa,IAAgB,CAEfhB,KAAMC,EACNgB,GAAIF,EAAQjB,EAAwBH,OAAS,EAAI,OAAS,GAFrDM,EAAOxB,eAAeY,WAO/Bc,cAACQ,KAAI,CAACC,MAAM,aAAaC,UAAU,SAAQR,SACxCpC,EAAE,yBAvBHkC,cAACQ,KAAI,CAACC,MAAM,aAAaC,UAAU,SAAQR,SACxCpC,EAAE,iDAiCFF,IAAY2B,GACXY,eAACY,IAAI,CAACC,cAAc,SAASC,WAAW,SAASC,GAAG,OAAMhB,SAAA,CACxDF,cAACQ,KAAI,CAACC,MAAM,aAAaK,GAAG,MAAKZ,SAC9BpC,EAAE,kCAELkC,cAACmB,IAAM,CAACC,GAAG,mBAAmBC,QAAQ,YAAYC,MAAM,KAAKC,GAAIC,IAAMC,GAAG,QAAOvB,SAC9EpC,EAAE,gCAKXkC,cAAC0B,IAAU,CAACC,MAAO,CAAEjB,UAAW,UAAWR,SACzCF,cAACmB,IAAM,CAACC,GAAG,mBAAmBG,GAAIC,IAAMC,GAAG,OAAOG,MAAM,OAAOC,UAAW7B,cAAC8B,IAAO,CAACrB,MAAM,UAAWP,SACjGpC,EAAE","file":"static/js/29.18f6c499.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Pair } from 'utils/@sdk'\nimport { Text, Flex, CardBody, CardFooter, Button, AddIcon } from 'components/_uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport FullPositionCard from '../../components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { usePairs } from '../../hooks/usePairs'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport Dots from '../../components/Loader/Dots'\nimport { AppHeader, AppBody } from '../../components/App'\nimport Page from '../Page'\n\nconst Body = styled(CardBody)`\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport default function Pool() {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs],\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens],\n  )\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens,\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const renderBody = () => {\n    if (!account) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          {t('Connect to a wallet to view your liquidity.')}\n        </Text>\n      )\n    }\n    if (v2IsLoading) {\n      return (\n        <Text color=\"textSubtle\" textAlign=\"center\">\n          <Dots>Loading</Dots>\n        </Text>\n      )\n    }\n    if (allV2PairsWithLiquidity?.length > 0) {\n      return allV2PairsWithLiquidity.map((v2Pair, index) => (\n        <FullPositionCard\n          key={v2Pair.liquidityToken.address}\n          pair={v2Pair}\n          mb={index < allV2PairsWithLiquidity.length - 1 ? '16px' : 0}\n        />\n      ))\n    }\n    return (\n      <Text color=\"textSubtle\" textAlign=\"center\">\n        {t('No liquidity found.')}\n      </Text>\n    )\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title=\"Your Liquidity\" subtitle=\"Remove liquidity to receive tokens back\" />\n        <Body>\n          {renderBody()}\n          {account && !v2IsLoading && (\n            <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"24px\">\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t(\"Don't see a pool you joined?\")}\n              </Text>\n              <Button id=\"import-pool-link\" variant=\"secondary\" scale=\"sm\" as={Link} to=\"/find\">\n                {t('Find other LP tokens')}\n              </Button>\n            </Flex>\n          )}\n        </Body>\n        <CardFooter style={{ textAlign: 'center' }}>\n          <Button id=\"join-pool-button\" as={Link} to=\"/add\" width=\"100%\" startIcon={<AddIcon color=\"white\" />}>\n            {t('Add Liquidity')}\n          </Button>\n        </CardFooter>\n      </AppBody>\n    </Page>\n  )\n}\n"],"sourceRoot":""}