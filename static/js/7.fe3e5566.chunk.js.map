{"version":3,"sources":["../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","state/achievements/hooks.ts","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx","state/hooks.ts","hooks/useTokenBalance.ts","hooks/useApproveConfirmTransaction.ts","views/Profile/components/ApproveConfirmButtons.tsx","state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","../node_modules/lodash/_shuffleSelf.js"],"names":["arrayShuffle","require","baseShuffle","isArray","module","exports","collection","copyArray","shuffleSelf","array","values","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","_ref","children","dispatch","useReducer","account","useWeb3React","useEffect","isSubscribed","async","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","_jsx","Provider","value","Wrapper","styled","div","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","_jsxs","Heading","as","scale","color","mb","Text","Breadcrumbs","map","translationKey","index","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","balance","cakeBalance","useTokenBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","label","_ref2","isDisabled","_ref3","Body","_ref4","tertiary","Children","StyledBackgroundImage","_ref5","src","SelectionCard","_ref6","name","isChecked","image","onChange","disabled","props","Radio","checked","e","target","style","flex","NextStepButton","Button","endIcon","ArrowForwardIcon","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","variationId","setVariationId","useState","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","useApproveConfirmTransaction","onRequiresApproval","response","address","toString","error","onApprove","approve","toJSON","onConfirm","mintNFT","onSuccess","_Fragment","fontSize","bold","num","CardBody","images","md","Number","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","isLoading","nftsInWallet","tokenIds","useGetCollectibles","toastError","useToast","length","to","marginLeft","Skeleton","height","walletNft","firstTokenId","getAddressByType","parseInt","contract","getErc721Contract","getSigner","tx","getPancakeProfileAddress","wait","status","AutoRenewIcon","spin","undefined","id","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","Object","team","isJoinable","Flex","CommunityIcon","mr","users","toLocaleString","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","result","sign","difference","Math","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","differenceInMilliseconds","differenceInSeconds","floor","ceil","cloneObject","dirtyObject","assign","MINUTES_IN_DAY","MINUTES_IN_MONTH","ConfirmProfileCreationModal","ExistingUserState","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","Modal","title","justifyContent","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","existingUserState","setExistingUserState","IDLE","isValid","setIsValid","setIsLoading","message","setMessage","onPresentConfirmProfileCreation","useModal","isUserCreated","CREATED","checkUsernameValidity","debounce","res","fetch","ok","_data$error","data","json","dateCreated","dirtyBaseDate","options","locale","defaultLocale","formatDistance","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","parseISO","created_at","Date","username","NEW","fetchUser","width","event","isWarning","minLength","maxLength","placeholder","CheckmarkIcon","WarningIcon","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","Checkbox","handleAcknowledge","ml","signature","signMessage","method","headers","body","JSON","stringify","_data$error2","mt","Steps","TeamSelection","NoWalletConnected","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","Views","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","costs","setCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","calls","multicallv2","profileABI","fetchCosts","DangerOutline","attrs","variant","failure","AvatarWrapper","mediaQueries","sm","StartPage","needsApproval","setNeedsApproval","profile","isActive","cost","currentAllowance","lt","checkApprovalStatus","flexDirection","ProfileAvatar","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","handleChange","pauseProfile","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","ClaimNftAndCakeModal","onEditProfileModal","hasProfile","HeaderWrapper","startIcon","PresentWonIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","img","AchievementAvatar","badge","alt","AchievementTitle","key","Description","AchievementDescription","description","Details","AchievementCard","achievement","PrizeIcon","points","Grid","AchievementsList","achievements","useSelector","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","cardBorder","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","ifoData","getClaimableIfoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","CardHeader","Menu","activeIndex","ChevronLeftIcon","ButtonMenu","ButtonMenuItem","TaskCenter","ComingSoon","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","p","ChevronRightIcon","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Status","ResponsiveText","AddressLink","Section","PublicProfile","usernameVisibilityToggled","setUsernameVisibility","usePersistState","localStorageKey","Icon","VisibilityOff","VisibilityOn","replace","toggleUsernameVisibility","href","getBscScanLink","external","OpenNewIcon","Tag","CheckmarkCircleIcon","outline","BlockIcon","StatBox","icon","subtitle","Profile","useFetchAchievements","fetchAchievements","PageLoader","Route","exact","path","useGetSortedRounds","roundData","useGetRounds","rounds","predictions","keys","reduce","accum","epoch","parseBigNumberObj","orderBy","useGetBetByEpoch","bets","ledgers","useGetIsClaimable","claimableStatuses","useGetEarliestEpoch","earliestRound","minBy","useIsHistoryPaneOpen","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetTotalIntervalBlocks","bufferBlocks","useGetPredictionsStatus","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","ethers","from","useGetRewardRate","rewardRate","useGetIsFetchingHistory","isFetchingHistory","useGetHistoryByAccount","history","useGetLastOraclePrice","lastOraclePrice","collectibles","identifiers","fetchWalletNfts","Nfts","FetchStatus","useGetBnbBalance","setBalance","lastUpdated","setLastUpdated","useLastUpdated","walletBalance","simpleRpcProvider","getBalance","fetchBalance","tokenAddress","NOT_FETCHED","SUCCESS","FAILED","balanceState","setBalanceState","fetchStatus","fastRefresh","useRefresh","getBep20Contract","balanceOf","console","prev","approvalState","confirmState","noop","onApproveSuccess","handlePreApprove","useRef","current","then","ButtonArrangement","StyledApproveConfirmButtonRow","UIKitButton","iconAttrs","ChevronRight","ChevronBottom","ChevronDownIcon","spinnerIcon","buttonArrangement","ROW","confirmLabel","confirmButtonText","Box","useTeam","fetchTeam","fetchTeams","TeamAvatar","card","background","bg","AvatarInactive","NoProfileAvatarIcon","_profile$nft","_profile$nft$images","SecondaryCard","defaultProps","textTransform","baseRandom","size","lastIndex","rand"],"mappings":"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","file":"static/js/7.fe3e5566.chunk.js","sourcesContent":["var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', 'churro', 'sunny']\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    nftAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          nftAddress: action.nftAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.canMint(account)\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {t('Total cost: 1.5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map((translationKey, index) => {\n          return (\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(translationKey)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading scale=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from 'components/_uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 8px;;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 8px; 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from 'components/_uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(bunnyFactoryContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return bunnyFactoryContract.mintNFT(variationId)\n      },\n      onSuccess: () => actions.nextStep(),\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/hooks'\nimport useToast from 'hooks/useToast'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const { library } = useWeb3React()\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n\n  const { t } = useTranslation()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const { toastError } = useToast()\n\n  const handleApprove = async () => {\n    const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n    const tx = await contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsApproving(false)\n      setIsApproved(true)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            id=\"approveStarterCollectible\"\n          >\n            {t('Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from 'components/_uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/teams/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 3 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React from 'react'\nimport { Modal, Flex, Text } from 'components/_uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, profileContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(profileContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'))\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from 'components/_uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { signMessage } from 'utils/web3React'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = await signMessage(library, account, userName)\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React, { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { t } = useTranslation()\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>{t('Loading...')}</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.canClaim(account)\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = async () => {\n    const tx = await claimRefundContract.getCakeBack()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Success!'))\n      onSuccess()\n      onDismiss()\n    } else {\n      setIsConfirming(false)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: BIG_ZERO,\n    numberCakeToRegister: BIG_ZERO,\n    numberCakeToUpdate: BIG_ZERO,\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\n          profileABI,\n          calls,\n        )\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from 'components/_uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/profile/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\n      const currentAllowance = new BigNumber(response.toString())\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t('%minimum% CAKE required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = async () => {\n    const tx = await pancakeProfileContract.pauseProfile()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess(t('Profile Paused!'))\n      onDismiss()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsConfirming(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles } from 'state/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n        return contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return profileContract.reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n        }\n\n        return profileContract.updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useProfile } from 'state/profile/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      goToChange()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{getFullDisplayBalance(cost)} CAKE</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: 'Edit Profile',\n  [Views.CHANGE]: 'Change Profile Pic',\n  [Views.REMOVE]: 'Remove Profile Pic',\n  [Views.APPROVE]: 'Approve CAKE',\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const translationKey = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, PresentWonIcon } from 'components/_uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const { t } = useTranslation()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {t('Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\n            {t('Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<PresentWonIcon />}>\n            {t('You’ve got a gift to claim!')}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from 'components/_uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(key, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const { t } = useTranslation()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {t(key, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from 'components/_uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAchievements } from 'state/achievements/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const { t } = useTranslation()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n            {t('No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, AchievementState } from '../types'\nimport { fetchAchievements } from '.'\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const { t } = useTranslation()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from 'components/_uikit'\nimport { Achievement } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const { t } = useTranslation()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = async () => {\n    const tx = await pointCenterContract.getPoints(achievement.address)\n    setIsCollecting(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsCollecting(false)\n      onCollectSuccess(achievement)\n      toastSuccess(t('Points Collected!'))\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsCollecting(false)\n    }\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {t('Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from 'components/_uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from 'components/_uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {t('Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {t('Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Achievements')}\n              </Heading>\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Task Center')}\n              </Heading>\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from 'components/_uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'components/_uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from 'components/_uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/hooks'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const { t } = useTranslation()\n  const { nftsInWallet } = useGetCollectibles()\n\n  return (\n    <>\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\n        {t('Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the 1TronicSwap platform.')}\n      </Text>\n      <Text as=\"p\">\n        {t('NFTs in this user’s wallet that aren’t approved Pancake Collectibles won’t be shown here.')}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {t('No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from 'components/_uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n  VisibilityOn,\n  VisibilityOff,\n} from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile } from 'state/profile/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { getBscScanLink } from 'utils'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const [usernameVisibilityToggled, setUsernameVisibility] = usePersistState(false, {\n    localStorageKey: 'username_visibility_toggled',\n  })\n  const { t } = useTranslation()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  const toggleUsernameVisibility = () => {\n    setUsernameVisibility(!usernameVisibilityToggled)\n  }\n\n  const { username, team, isActive, points } = profile\n\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Flex alignItems=\"center\">\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\n                </Flex>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={getBscScanLink(account, 'address')} color=\"text\" external>\n                    {account}\n                    <OpenNewIcon ml=\"4px\" />\n                  </AddressLink>\n                </Flex>\n                <ResponsiveText bold>{team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {t('Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {t('Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\n                {t('Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/Layout/Page'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { useProfile } from 'state/profile/hooks'\nimport { useFetchAchievements } from 'state/achievements/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n","import { useEffect, useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { ethers } from 'ethers'\nimport { minBy, orderBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport Nfts from 'config/constants/nfts'\nimport { State, NodeRound, ReduxNodeLedger, NodeLedger, ReduxNodeRound } from './types'\nimport { fetchWalletNfts } from './collectibles'\nimport { parseBigNumberObj } from './predictions/helpers'\n\n// /!\\\n// Don't add anything here. These hooks will be moved the the predictions folder\n\n// Predictions\nexport const useGetRounds = () => {\n  const rounds = useSelector((state: State) => state.predictions.rounds)\n  return Object.keys(rounds).reduce((accum, epoch) => {\n    return {\n      ...accum,\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\n    }\n  }, {}) as { [key: string]: NodeRound }\n}\n\nexport const useGetRound = (epoch: number) => {\n  const round = useSelector((state: State) => state.predictions.rounds[epoch])\n  return parseBigNumberObj<ReduxNodeRound, NodeRound>(round)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\n  const bets = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][epoch]) {\n    return null\n  }\n\n  return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\n}\n\nexport const useGetIsClaimable = (epoch) => {\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\n  return claimableStatuses[epoch] || false\n}\n\n/**\n * Used to get the range of rounds to poll for\n */\nexport const useGetEarliestEpoch = () => {\n  return useSelector((state: State) => {\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\n    return earliestRound?.epoch\n  })\n}\n\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\n}\n\nexport const useGetRewardRate = () => {\n  const rewardRate = useSelector((state: State) => state.predictions.rewardRate)\n  return rewardRate / 100\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetLedgerByRoundId = (account: string, roundId: string) => {\n  const ledgers = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!ledgers[account]) {\n    return null\n  }\n\n  if (!ledgers[account][roundId]) {\n    return null\n  }\n\n  return ledgers[account][roundId]\n}\n\nexport const useGetLastOraclePrice = () => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return useMemo(() => {\n    return ethers.BigNumber.from(lastOraclePrice)\n  }, [lastOraclePrice])\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await simpleRpcProvider.getBalance(account)\n      setBalance(new BigNumber(walletBalance.toString()))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => ethers.providers.TransactionResponse\n  onConfirm: () => ethers.providers.TransactionResponse\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n  onApproveSuccess?: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async () => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { NoProfileAvatarIcon } from 'components/_uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from 'components/_uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 8px;;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from 'components/_uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n"],"sourceRoot":""}