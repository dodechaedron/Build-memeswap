{"version":3,"sources":["../node_modules/lodash/isEmpty.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","utils/truncateWalletAddress.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/BreadcrumbLink.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx"],"names":["baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","value","splice","length","tag","size","key","call","BaseLabel","styled","label","_ref","theme","colors","text","Label","SecondaryLabel","FormError","_ref2","children","_jsx","Text","color","mb","FormErrors","_ref3","errors","Box","mt","map","error","Choice","onRemove","onTextInput","props","isWarning","setIsWarning","useState","isDirty","setIsDirty","_jsxs","position","Input","onChange","evt","currentTarget","right","top","zIndex","IconButton","variant","onClick","CloseIcon","makeChoice","id","uniqueId","Choices","choices","t","useTranslation","hasMinimumChoices","filter","choice","Card","CardHeader","Heading","as","scale","CardBody","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","handleRemove","newPrevChoice","undefined","Button","type","addChoice","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","block","onDismiss","modalIsOpen","setModalIsOpen","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","useGetVotingPower","useTheme","Modal","title","handleDismiss","headerBackground","gradients","cardHeader","width","Flex","height","alignItems","justifyContent","Spinner","_Fragment","DetailsView","EasyMde","lazy","CreateProposal","state","setState","name","body","times","startDate","startTime","endDate","endTime","snapshot","setIsLoading","fieldsState","setFieldsState","account","useWeb3React","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","toastSuccess","toastError","useToast","onPresentVoteDetailsModal","useModal","formErrors","getFormErrors","formData","field","num","hasEmptyChoice","some","Array","startDateTimestamp","updateValue","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMIN_ADDRESS","useEffect","Container","py","Breadcrumbs","BreadcrumbLink","to","onSubmit","async","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","sig","signMessage","msg","address","data","sendSnaphotData","ipfsHash","message","console","Layout","htmlFor","inputName","required","onTextChange","p","px","ReactMarkdown","DatePicker","selected","placeholderText","TimePicker","mr","LinkExternal","href","getBscScanLink","truncateWalletAddress","endIcon","AutoRenewIcon","spin","isEmpty","count","VOTE_THRESHOLD","UnlockButton","isCoreProposal","author","toLowerCase","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","plugins","network","strategies","params","symbol","getCakeAddress","decimals","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","response","fetch","SNAPSHOT_HUB_API","method","headers","Accept","ok","json","Error","error_description","getVotingPower","poolAddresses","blockNumber","simpleRpcProvider","getBlockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","getTotalFromVotes","_vote$metadata","power","BigNumber","votingPower","plus","BIG_ZERO","PROPOSALS_TO_SHOW","IPFS_GATEWAY","startLength","arguments","endLength","substring","VotingBox","div","cardBorder","ModalInner","maxWidth","Link","primaryBright","mediaQueries","lg","fontSize","textTransform","bold","toFormat","textAlign","initialState","verificationHash","isActive","setVotingPower","getActivePools","contractAddress","getAddress","prevVotingPower","fetchVotingPower","Table","table","ThemedComponent","Title","my","markdownComponents","h1","h2","h3","h4","h5","h6","ol","ul","pre","ReactMarkdownLib","remarkPlugins","gfm","components"],"mappings":"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","file":"static/js/9.2d282341.chunk.js","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React from 'react'\nimport { Box, Text } from 'components/_uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from 'components/_uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from 'components/_uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\n    useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from 'components/_uikit'\nimport { useHistory } from 'react-router'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker } from 'components/DatePicker'\nimport UnlockButton from 'components/UnlockButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport BreadcrumbLink from '../components/BreadcrumbLink'\nimport { sendSnaphotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMIN_ADDRESS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = lazy(() => import('components/EasyMde'))\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useHistory()\n  const { library } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnaphotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      toastError(t('Error'), error?.message || error?.error)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(\n    () => ({\n      hideIcons: account === ADMIN_ADDRESS ? [] : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }),\n    [account],\n  )\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\n          <BreadcrumbLink to=\"/voting\">{t('Voting')}</BreadcrumbLink>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getBscScanLink(account, 'address')}>\n                      {truncateWalletAddress(account)}\n                    </LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <UnlockButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n    </Container>\n  )\n}\n\nexport default CreateProposal\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnaphotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    const power = new BigNumber(vote.metadata?.votingPower)\n    return accum.plus(power)\n  }, BIG_ZERO)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMIN_ADDRESS = '0x6eaf1b33b8672c5dc40aB8f4bA3A0111723126c7'\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress\n","import React from 'react'\nimport { Box, BoxProps } from 'components/_uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst BreadcrumbLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.primaryBright};\n`\n\nexport default BreadcrumbLink\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from 'components/_uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: BigNumber\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {total.toFormat(3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Syrup Pools')}\n        </Text>\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('CAKE BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n  total: BigNumber\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: BIG_ZERO,\n  cakeVaultBalance: BIG_ZERO,\n  cakePoolBalance: BIG_ZERO,\n  poolsBalance: BIG_ZERO,\n  cakeBnbLpBalance: BIG_ZERO,\n  total: BIG_ZERO,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: new BigNumber(cakeBalance),\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\n            cakePoolBalance: new BigNumber(cakePoolBalance),\n            poolsBalance: new BigNumber(poolsBalance),\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\n            total: new BigNumber(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading, Text } from 'components/_uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: Table,\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n"],"sourceRoot":""}