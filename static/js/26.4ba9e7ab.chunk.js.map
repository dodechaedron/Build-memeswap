{"version":3,"sources":["views/Advertising/components/PlainCard.tsx","views/Advertising/Advertising.tsx"],"names":["StyledPlainCard","styled","Card","_ref","invert","theme","colors","secondary","_ref2","decorationImage","Block","div","CardCorner","PlainCard","_ref3","text","title","redirect","_jsx","children","_jsxs","Text","color","fontWeight","fontSize","lineHeight","Flex","justifyContent","NavLink","exact","activeClassName","to","id","ArrowForwardIcon","width","CTACardsItemsImage","CTACards","BaseLayout","mediaQueries","sm","lg","Advertising","t","useTranslation","Page","map"],"mappings":"oOAKA,MAAMA,EAAkBC,YAAOC,IAAkD;;;;;;;;sBAQ3DC,IAAA,IAAC,OAAEC,EAAM,MAAEC,GAAOF,EAAA,OAAKC,EAASC,EAAMC,OAAOC,UAAY;IAC3EC,IAAA,IAAC,gBAACC,GAAgBD,EAAA,MAAyB,KAApBC,EAAyB,GAChD,yLAQoBA;EAMlBC,EAAQT,IAAOU,GAAG;;;;;;EAQlBC,EAAaX,IAAOU,GAAG;;;;EA6DdE,MAhD6BC,IAMrC,IANsC,KAC3CC,EAAI,MACJC,EAAK,OACLZ,GAAS,EAAK,SACda,EAAW,GAAE,gBACbR,EAAkB,IACnBK,EAEC,OACEI,cAAClB,EAAe,CAACI,OAAQA,EAAQK,gBAAiBA,EAAgBU,SACjD,KAAbF,EAEEG,eAACV,EAAK,CAAAS,SAAA,CACHH,GACCE,cAACG,KAAI,CAACC,MAAM,aAAaC,WAAW,MAAMC,SAAS,OAAOC,WAAW,OAAMN,SACxEH,IAGLE,cAACQ,IAAI,CAACC,eAAe,gBAAeR,SAClCD,cAACG,KAAI,CAACC,MAAQlB,EAAS,OAAS,YAAamB,WAAW,MAAMC,SAAS,OAAOC,WAAW,OAAMN,SAC5FJ,SAMPG,cAACU,IAAO,CAACC,OAAK,EAACC,gBAAgB,SAASC,GAAId,EAAUe,GAAG,eAAcb,SACrEC,eAACV,EAAK,CAAAS,SAAA,CACHH,GACCE,cAACG,KAAI,CAACC,MAAM,aAAaC,WAAW,MAAMC,SAAS,OAAOC,WAAW,OAAMN,SACxEH,IAGLI,eAACM,IAAI,CAACC,eAAe,gBAAeR,SAAA,CAClCD,cAACG,KAAI,CAACC,MAAQlB,EAAS,OAAS,YAAamB,WAAW,MAAMC,SAAS,OAAOC,WAAW,OAAMN,SAC5FJ,IAEHG,cAACN,EAAU,CAAAO,SACTD,cAACe,IAAgB,CAACX,MAAQlB,EAAS,aAAe,UAAW8B,MAAM,sBCjFrF,MAAMC,EAAqBlC,YAAOC,IAAiC;;;;;;EAMjEC,IAAA,IAAC,gBAACM,GAAgBN,EAAA,MAAyB,KAApBM,EAAyB,GAChD,oIAMoBA;EAKhB2B,EAAWnC,YAAOoC,IAAW;;;;;;;;;;;IAW/B7B,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMiC,aAAaC;;;;;;IAMlCzB,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMiC,aAAaE;;;;;;;;EAqCvBC,MA3BeA,KAC5B,MAAM,EAAEC,GAAMC,cAQd,OACEzB,cAAC0B,IAAI,CAAAzB,SACHD,cAAA,OAAAC,SACEC,eAACgB,EAAQ,CAAAjB,SAAA,CAVU,CAAC,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCAKA0B,KAAKpC,GAEjBS,cAACiB,EAAkB,CAAuB1B,gBAAiBA,GAAlCA,KAG/BS,cAAA,OAAAC,SACED,cAACL,EAAS,CAACE,KAAM2B,EAAE,gCAAiCzB,SAAS,UAAUb,QAAM","file":"static/js/26.4ba9e7ab.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Card, ArrowForwardIcon, Text } from 'components/_uikit'\nimport { NavLink } from 'react-router-dom'\n\nconst StyledPlainCard = styled(Card)<{invert : boolean, decorationImage: string}>`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  min-height: 142px;\n  padding-left: 24px;\n  padding-right: 24px;\n  position: relative;\n  background-color: ${({ invert, theme }) => invert ? theme.colors.secondary : `transparent`};\n  ${({decorationImage}) => decorationImage === '' ? '':\n    `&:before{\n      content: \"\";\n      position: absolute;\n      width: 133px;\n      height: 165px;\n      top: -14%;\n      right: -25px;\n      z-index: -1;\n      background: url(${decorationImage}) 0 0 no-repeat;\n      transform: rotate(-10deg);\n    }`\n  }  \n`\n\nconst Block = styled.div`\n  position: absolute;\n  top: 50%;\n  width: calc( 100% - 48px);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n`\n\nconst CardCorner = styled.div`\n  position: absolute;\n  bottom: calc(50% - 16px);\n  right: 0;\n`;\nexport interface CardValueProps {\n  text: string,\n  title?: string,\n  invert?: boolean,\n  redirect?: string,\n  decorationImage?: string,\n}\n\nconst PlainCard: React.FC<CardValueProps> = ({\n  text,\n  title,\n  invert = false,\n  redirect = \"\",\n  decorationImage = \"\",\n}) => {\n\n  return (\n    <StyledPlainCard invert={invert} decorationImage={decorationImage}>      \n      { redirect === \"\" ? \n          (\n          <Block>\n            {title && (\n              <Text color=\"textSubtle\" fontWeight=\"400\" fontSize=\"14px\" lineHeight=\"24px\">\n                {title}\n              </Text>\n            )}\n            <Flex justifyContent=\"space-between\">\n              <Text color={ invert ? \"text\" : \"secondary\"} fontWeight=\"700\" fontSize=\"24px\" lineHeight=\"24px\">\n                {text}\n              </Text>\n            </Flex>\n          </Block>      \n          )\n        : (\n          <NavLink exact activeClassName=\"active\" to={redirect} id=\"farm-apr-cta\">\n            <Block>\n              {title && (\n                <Text color=\"textSubtle\" fontWeight=\"400\" fontSize=\"14px\" lineHeight=\"24px\">\n                  {title}\n                </Text>\n              )}\n              <Flex justifyContent=\"space-between\">\n                <Text color={ invert ? \"text\" : \"secondary\"} fontWeight=\"700\" fontSize=\"24px\" lineHeight=\"24px\">\n                  {text}\n                </Text>\n                <CardCorner>\n                  <ArrowForwardIcon color={ invert ? \"background\" : \"primary\"} width=\"32px\"/>\n                </CardCorner>\n              </Flex>\n            </Block>      \n          </NavLink>\n      )}\n    </StyledPlainCard>\n  )\n}\n\nexport default PlainCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, BaseLayout } from 'components/_uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport PlainCard from './components/PlainCard'\n\nconst CTACardsItemsImage = styled(Card)<{ decorationImage: string}>`\nmargin-left: auto;\nmargin-right: auto;\nwidth: 100%;\nmin-height: 142px;\nposition: relative;\n${({decorationImage}) => decorationImage === '' ? '':\n  `&:before{\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: -1;\n    background: url(${decorationImage}) 0 0 no-repeat;\n    background-size: cover;\n  }`\n}  \n`\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-top: 128px;\n  margin-bottom: 24px;\n  column-gap: 22px;\n  row-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Advertising: React.FC = () => {\n  const { t } = useTranslation()\n  const decorationImages = [\"images/advertisings/adver01.svg\",\n                            \"images/advertisings/adver02.svg\",\n                            \"images/advertisings/adver03.svg\",\n                            \"images/advertisings/adver04.svg\",\n                            \"images/advertisings/adver05.svg\",\n                            \"images/advertisings/adver06.svg\",\n                            \"images/advertisings/adver07.svg\"]\n  return (\n    <Page>\n      <div>\n        <CTACards>\n          {decorationImages.map((decorationImage) => {\n            return (\n                <CTACardsItemsImage key={decorationImage} decorationImage={decorationImage}/>\n            )\n          })}\n          <div>\n            <PlainCard text={t('Advertise your projects here')} redirect=\"/advert\" invert/>\n          </div>\n        </CTACards>\n      </div>\n    </Page>\n  )\n}\n\nexport default Advertising\n"],"sourceRoot":""}