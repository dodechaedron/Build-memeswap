{"version":3,"sources":["views/Voting/Proposal/Details.tsx","views/Voting/components/TextEllipsis.tsx","views/Voting/Proposal/Results.tsx","views/Voting/components/CastVoteModal/types.ts","views/Voting/components/CastVoteModal/MainView.tsx","views/Voting/components/CastVoteModal/index.tsx","views/Voting/Proposal/Vote.tsx","views/Voting/components/Proposal/VotesLoading.tsx","views/Voting/components/Proposal/Row.tsx","views/Voting/components/Proposal/VoteRow.tsx","views/Voting/Proposal/Votes.tsx","views/Voting/Proposal/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts","utils/truncateWalletAddress.ts","state/voting/hooks.ts","views/Voting/components/Proposals/tags.tsx","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx"],"names":["DetailBox","styled","Box","_ref","theme","colors","background","_ref2","cardBorder","Details","_ref3","proposal","t","useTranslation","startDate","Date","start","endDate","end","_jsxs","Card","mb","children","_jsx","CardHeader","Heading","as","scale","CardBody","Flex","alignItems","Text","color","LinkExternal","href","IPFS_GATEWAY","id","ml","slice","getBscScanLink","author","truncateWalletAddress","snapshot","p","ProposalStateTag","proposalState","state","fontSize","format","TextEllipsis","Results","choices","votes","results","calculateVoteResults","votingStatus","useGetVotingStateLoadingStatus","account","useWeb3React","totalVotes","getTotalFromVotes","VotingStateLoadingStatus","IDLE","map","choice","index","choiceVotes","totalChoiceVote","progress","eq","div","times","toNumber","hasVoted","some","vote","voter","toLowerCase","mt","title","Tag","variant","outline","CheckmarkCircleIcon","mr","Progress","primaryStep","justifyContent","total","toFormat","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","LOADING","length","count","Skeleton","height","ConfirmVoteView","MainView","isPending","isLoading","onConfirm","onViewDetails","onDismiss","_Fragment","ModalInner","textTransform","bold","label","VotingBox","onClick","style","cursor","IconButton","ChevronRightIcon","width","Button","endIcon","AutoRenewIcon","spin","disabled","CastVoteModal","onSuccess","proposalId","block","view","setView","useState","MAIN","modalIsOpen","setModalIsOpen","setIsPending","toastError","useToast","library","useWeb3Provider","useTheme","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","verificationHash","useGetVotingPower","isStartView","handleBack","DETAILS","handleDismiss","Modal","onBack","hideCloseButton","headerBackground","gradients","cardHeader","async","voteMsg","JSON","stringify","generatePayloadData","type","SnapshotCommand","VOTE","payload","value","metadata","votingPower","toString","sig","signMessage","msg","address","sendSnaphotData","error","message","console","handleViewDetails","DetailsView","Choice","isChecked","isDisabled","ChoiceText","Vote","props","setVote","toastSuccess","dispatch","useAppDispatch","presentCastVoteModal","useModal","fetchVotes","Number","flexShrink","Radio","checked","onChange","handleChange","UnlockButton","Row","StyledSkeleton","VotesLoading","AddressColumn","attrs","ChoiceColumn","VotingPowerColumn","Grid","mediaQueries","sm","VoteRow","_vote$metadata","isVoter","hasVotingPower","BigNumber","parseVotePower","incomingVote","_incomingVote$metadat","parseFloat","Votes","showAll","setShowAll","orderedVotes","orderBy","displayVotes","isFinished","py","px","handleClick","ChevronUpIcon","ChevronDownIcon","Proposal","useParams","useGetProposal","useGetVotes","voteLoadingStatus","proposalLoadingStatus","useGetProposalLoadingStatus","hasAccountVoted","isPageLoading","useEffect","fetchProposal","verifyVotes","getVotes","Container","Link","to","startIcon","ArrowBackIcon","Layout","ProposalTypeTag","isCoreProposal","ReactMarkdown","body","ProposalState","ACTIVE","PageLoader","ADMIN_ADDRESS","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","generateMetaData","plugins","network","strategies","name","params","symbol","getCakeAddress","decimals","version","SNAPSHOT_VERSION","timestamp","now","toFixed","space","PANCAKE_SPACE","response","fetch","SNAPSHOT_HUB_API","method","headers","Accept","ok","json","Error","error_description","getVotingPower","poolAddresses","blockNumber","simpleRpcProvider","getBlockNumber","SNAPSHOT_VOTING_API","data","reduce","accum","choiceText","power","plus","BIG_ZERO","PROPOSALS_TO_SHOW","VOTE_THRESHOLD","startLength","arguments","endLength","substring","useGetProposals","useSelector","voting","Object","values","_inValid","VoteNowTag","PENDING","SoonTag","ClosedTag","CoreTag","CommunityTag","maxWidth","lg","textAlign","initialState","isActive","setVotingPower","setIsLoading","getActivePools","contractAddress","getAddress","prevVotingPower","fetchVotingPower","Table","table","text","ThemedComponent","Title","my","markdownComponents","h1","h2","h3","h4","h5","h6","ol","ul","pre","ReactMarkdownLib","remarkPlugins","gfm","components"],"mappings":"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","file":"static/js/8.1726c4cc.chunk.js","sourcesContent":["import React from 'react'\nimport { Box, Card, CardBody, CardHeader, Flex, Heading, LinkExternal, Text } from 'components/_uikit'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport { Proposal } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { IPFS_GATEWAY } from '../config'\nimport { ProposalStateTag } from '../components/Proposals/tags'\n\ninterface DetailsProps {\n  proposal: Proposal\n}\n\nconst DetailBox = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 8px;;\n`\n\nconst Details: React.FC<DetailsProps> = ({ proposal }) => {\n  const { t } = useTranslation()\n  const startDate = new Date(proposal.start * 1000)\n  const endDate = new Date(proposal.end * 1000)\n\n  return (\n    <Card mb=\"16px\">\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Details')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Identifier')}</Text>\n          <LinkExternal href={`${IPFS_GATEWAY}/${proposal.id}`} ml=\"8px\">\n            {proposal.id.slice(0, 8)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Creator')}</Text>\n          <LinkExternal href={getBscScanLink(proposal.author, 'address')} ml=\"8px\">\n            {truncateWalletAddress(proposal.author)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Snapshot')}</Text>\n          <LinkExternal href={getBscScanLink(proposal.snapshot, 'block')} ml=\"8px\">\n            {proposal.snapshot}\n          </LinkExternal>\n        </Flex>\n        <DetailBox p=\"16px\">\n          <ProposalStateTag proposalState={proposal.state} mb=\"8px\" />\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('Start Date')}\n            </Text>\n            <Text ml=\"8px\">{format(startDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('End Date')}\n            </Text>\n            <Text ml=\"8px\">{format(endDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n        </DetailBox>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Details\n","import styled from 'styled-components'\nimport { Text } from 'components/_uikit'\n\nconst TextEllipsis = styled(Text)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport default TextEllipsis\n","import React from 'react'\nimport {\n  Box,\n  Text,\n  Flex,\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  Progress,\n  Skeleton,\n  Tag,\n  CheckmarkCircleIcon,\n} from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\nimport TextEllipsis from '../components/TextEllipsis'\n\ninterface ResultsProps {\n  choices: string[]\n  votes: Vote[]\n}\n\nconst Results: React.FC<ResultsProps> = ({ choices, votes }) => {\n  const { t } = useTranslation()\n  const results = calculateVoteResults(votes)\n  const votingStatus = useGetVotingStateLoadingStatus()\n  const { account } = useWeb3React()\n  const totalVotes = getTotalFromVotes(votes)\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Current Results')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {votingStatus === VotingStateLoadingStatus.IDLE &&\n          choices.map((choice, index) => {\n            const choiceVotes = results[choice] || []\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\n\n            const progress = totalVotes.eq(0) ? 0 : totalChoiceVote.div(totalVotes).times(100).toNumber()\n            const hasVoted = choiceVotes.some((vote) => {\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\n            })\n\n            return (\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\n                <Flex alignItems=\"center\" mb=\"8px\">\n                  <TextEllipsis mb=\"4px\" title={choice}>\n                    {choice}\n                  </TextEllipsis>\n                  {hasVoted && (\n                    <Tag variant=\"success\" outline ml=\"8px\">\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n                    </Tag>\n                  )}\n                </Flex>\n                <Box mb=\"4px\">\n                  <Progress primaryStep={progress} scale=\"sm\" />\n                </Box>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: totalChoiceVote.toFormat(3) })}</Text>\n                  <Text>\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\n                  </Text>\n                </Flex>\n              </Box>\n            )\n          })}\n\n        {votingStatus === VotingStateLoadingStatus.LOADING &&\n          times(choices.length).map((count, index) => {\n            return (\n              <Box key={count} mt={index > 0 ? '24px' : '0px'}>\n                <Skeleton height=\"36px\" mb=\"4px\" />\n              </Box>\n            )\n          })}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Results\n","import { InjectedModalProps } from 'components/_uikit'\n\nexport enum ConfirmVoteView {\n  MAIN = 'main',\n  DETAILS = 'details',\n}\n\nexport interface CastVoteModalProps extends InjectedModalProps {\n  onSuccess: () => Promise<void>\n  proposalId: string\n  vote: {\n    label: string\n    value: number\n  }\n  block?: number\n}\n","import React from 'react'\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from 'components/_uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport TextEllipsis from '../TextEllipsis'\nimport { VotingBox, ModalInner } from './styles'\nimport { CastVoteModalProps } from './types'\n\ninterface MainViewProps {\n  vote: {\n    label: string\n    value: number\n  }\n  isLoading: boolean\n  isPending: boolean\n  total: BigNumber\n  onConfirm: () => void\n  onViewDetails: () => void\n  onDismiss: CastVoteModalProps['onDismiss']\n}\n\nconst MainView: React.FC<MainViewProps> = ({\n  vote,\n  total,\n  isPending,\n  isLoading,\n  onConfirm,\n  onViewDetails,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <ModalInner>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Voting For')}\n        </Text>\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\n          {vote.label}\n        </TextEllipsis>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Your Voting Power')}\n        </Text>\n        {isLoading ? (\n          <Skeleton height=\"64px\" mb=\"24px\" />\n        ) : (\n          <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\n            <Text bold fontSize=\"20px\">\n              {total.toFormat(3)}\n            </Text>\n            <IconButton scale=\"sm\" variant=\"text\">\n              <ChevronRightIcon width=\"24px\" />\n            </IconButton>\n          </VotingBox>\n        )}\n        <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\n          {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\n        </Text>\n      </ModalInner>\n      <Button\n        isLoading={isPending}\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={isLoading || total.eq(0)}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={onConfirm}\n      >\n        {t('Confirm Vote')}\n      </Button>\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\n        {t('Cancel')}\n      </Button>\n    </>\n  )\n}\n\nexport default MainView\n","import React, { useState } from 'react'\nimport { Box, Modal } from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { SnapshotCommand } from 'state/types'\nimport { signMessage } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useTheme from 'hooks/useTheme'\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\nimport MainView from './MainView'\nimport DetailsView from './DetailsView'\nimport { generatePayloadData, Message, sendSnaphotData } from '../../helpers'\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\n\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const [isPending, setIsPending] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const { theme } = useTheme()\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    verificationHash,\n  } = useGetVotingPower(block, modalIsOpen)\n\n  const isStartView = view === ConfirmVoteView.MAIN\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\n\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\n  }\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true)\n      const voteMsg = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.VOTE,\n        payload: {\n          proposal: proposalId,\n          choice: vote.value,\n          metadata: {\n            votingPower: total.toString(),\n            verificationHash,\n          },\n        },\n      })\n\n      const sig = await signMessage(library, account, voteMsg)\n      const msg: Message = { address: account, msg: voteMsg, sig }\n\n      // Save proposal to snapshot\n      await sendSnaphotData(msg)\n      setIsPending(false)\n\n      await onSuccess()\n\n      handleDismiss()\n    } catch (error) {\n      setIsPending(false)\n      toastError(t('Error'), error?.message)\n      console.error(error)\n    }\n  }\n\n  return (\n    <Modal\n      title={title[view]}\n      onBack={handleBack}\n      onDismiss={onDismiss}\n      hideCloseButton={!isStartView}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Box mb=\"24px\" width=\"320px\">\n        {view === ConfirmVoteView.MAIN && (\n          <MainView\n            vote={vote}\n            isLoading={isLoading}\n            isPending={isPending}\n            total={total}\n            onConfirm={handleConfirmVote}\n            onViewDetails={handleViewDetails}\n            onDismiss={handleDismiss}\n          />\n        )}\n        {view === ConfirmVoteView.DETAILS && (\n          <DetailsView\n            total={total}\n            cakeBalance={cakeBalance}\n            cakeVaultBalance={cakeVaultBalance}\n            cakePoolBalance={cakePoolBalance}\n            poolsBalance={poolsBalance}\n            cakeBnbLpBalance={cakeBnbLpBalance}\n          />\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default CastVoteModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, CardHeader, CardProps, Heading, Radio, Text, useModal } from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { Proposal } from 'state/types'\nimport { fetchVotes } from 'state/voting'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport CastVoteModal from '../components/CastVoteModal'\n\ninterface VoteProps extends CardProps {\n  proposal: Proposal\n}\n\ninterface State {\n  label: string\n  value: number\n}\n\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\n  align-items: center;\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\n  border-radius: 8px;;\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  margin-bottom: 16px;\n  padding: 16px;\n`\n\nconst ChoiceText = styled.div`\n  flex: 1;\n  padding-left: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 0;\n`\n\nconst Vote: React.FC<VoteProps> = ({ proposal, ...props }) => {\n  const [vote, setVote] = useState<State>(null)\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleSuccess = async () => {\n    toastSuccess(t('Vote cast!'))\n    dispatch(fetchVotes({ proposalId: proposal.id, block: Number(proposal.snapshot) }))\n  }\n\n  const [presentCastVoteModal] = useModal(\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\n  )\n\n  return (\n    <Card {...props}>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Cast your vote')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {proposal.choices.map((choice, index) => {\n          const isChecked = index + 1 === vote?.value\n\n          const handleChange = () => {\n            setVote({\n              label: choice,\n              value: index + 1,\n            })\n          }\n\n          return (\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\n              <div style={{ flexShrink: 0 }}>\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\n              </div>\n              <ChoiceText>\n                <Text as=\"span\" title={choice}>\n                  {choice}\n                </Text>\n              </ChoiceText>\n            </Choice>\n          )\n        })}\n        {account ? (\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\n            {t('Cast Vote')}\n          </Button>\n        ) : (\n          <UnlockButton />\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Vote\n","import React from 'react'\nimport { Box, Flex, Skeleton } from 'components/_uikit'\nimport times from 'lodash/times'\nimport styled from 'styled-components'\n\nconst Row = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst StyledSkeleton = styled(Skeleton)`\n  flex: 1;\n`\n\nconst VotesLoading = () => {\n  return (\n    <Box>\n      {times(10).map((index) => (\n        <Row key={index}>\n          <Skeleton height=\"21px\" mr=\"32px\" width=\"100px\" />\n          <StyledSkeleton height=\"21px\" mr=\"32px\" width=\"100%\" />\n          <StyledSkeleton height=\"21px\" width=\"100%\" />\n        </Row>\n      ))}\n    </Box>\n  )\n}\n\nexport default VotesLoading\n","import styled from 'styled-components'\nimport { Grid, Box } from 'components/_uikit'\n\nexport const AddressColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: address;\n`\n\nexport const ChoiceColumn = styled(Box)`\n  grid-area: choice;\n  overflow: hidden;\n`\n\nexport const VotingPowerColumn = styled(Box)`\n  justify-self: end;\n  grid-area: vote;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  grid-gap: 8px;\n  grid-template-areas: 'address choice vote';\n  grid-template-columns: minmax(110px, 200px) 1fr 1fr;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n    padding: 16px 24px;\n  }\n`\n\nexport default Row\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from 'components/_uikit'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote } from 'state/types'\nimport { IPFS_GATEWAY } from '../../config'\nimport TextEllipsis from '../TextEllipsis'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\n\ninterface VoteRowProps {\n  vote: Vote\n  isVoter: boolean\n}\n\nconst VoteRow: React.FC<VoteRowProps> = ({ vote, isVoter }) => {\n  const { t } = useTranslation()\n  const hasVotingPower = !!vote.metadata?.votingPower\n  const votingPower = hasVotingPower ? new BigNumber(vote.metadata.votingPower).toFormat(3) : '--'\n\n  return (\n    <Row>\n      <AddressColumn>\n        <Flex alignItems=\"center\">\n          <LinkExternal href={getBscScanLink(vote.voter, 'address')}>{truncateWalletAddress(vote.voter)}</LinkExternal>\n          {isVoter && (\n            <Tag variant=\"success\" outline ml=\"8px\">\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n            </Tag>\n          )}\n        </Flex>\n      </AddressColumn>\n      <ChoiceColumn>\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\n          {vote.proposal.choices[vote.choice - 1]}\n        </TextEllipsis>\n      </ChoiceColumn>\n      <VotingPowerColumn>\n        <Flex alignItems=\"center\" justifyContent=\"end\">\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\n        </Flex>\n      </VotingPowerColumn>\n    </Row>\n  )\n}\n\nexport default VoteRow\n","import React, { useState } from 'react'\nimport {\n  AutoRenewIcon,\n  Card,\n  CardHeader,\n  ChevronDownIcon,\n  Flex,\n  Heading,\n  Button,\n  ChevronUpIcon,\n  Text,\n} from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport orderBy from 'lodash/orderBy'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\nimport VotesLoading from '../components/Proposal/VotesLoading'\nimport VoteRow from '../components/Proposal/VoteRow'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from '../components/Proposal/Row'\n\nconst VOTES_PER_VIEW = 20\n\ninterface VotesProps {\n  votes: Vote[]\n}\n\nconst parseVotePower = (incomingVote: Vote) => {\n  return parseFloat(incomingVote?.metadata?.votingPower)\n}\n\nconst Votes: React.FC<VotesProps> = ({ votes }) => {\n  const [showAll, setShowAll] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\n  const voteStatus = useGetVotingStateLoadingStatus()\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE\n\n  const handleClick = () => {\n    setShowAll(!showAll)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\" scale=\"md\">\n            {t('Votes (%count%)', { count: votes.length.toLocaleString() })}\n          </Heading>\n          {!isFinished && <AutoRenewIcon spin width=\"22px\" />}\n        </Flex>\n      </CardHeader>\n      {!isFinished && <VotesLoading />}\n\n      {isFinished && displayVotes.length > 0 && (\n        <>\n          <Row>\n            <AddressColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Voter')}\n              </Text>\n            </AddressColumn>\n            <ChoiceColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Decision')}\n              </Text>\n            </ChoiceColumn>\n            <VotingPowerColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Vote Weight')}\n              </Text>\n            </VotingPowerColumn>\n          </Row>\n          {displayVotes.map((vote) => {\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\n          })}\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\n            <Button\n              width=\"100%\"\n              onClick={handleClick}\n              variant=\"text\"\n              endIcon={\n                showAll ? (\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                ) : (\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                )\n              }\n              disabled={!isFinished}\n            >\n              {showAll ? t('Hide') : t('See All')}\n            </Button>\n          </Flex>\n        </>\n      )}\n\n      {isFinished && displayVotes.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\n        </Flex>\n      )}\n    </Card>\n  )\n}\n\nexport default Votes\n","import React, { useEffect } from 'react'\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from 'components/_uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link, useParams } from 'react-router-dom'\nimport { useAppDispatch } from 'state'\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types'\nimport {\n  useGetProposal,\n  useGetVotingStateLoadingStatus,\n  useGetVotes,\n  useGetProposalLoadingStatus,\n} from 'state/voting/hooks'\nimport { fetchProposal, fetchVotes, verifyVotes } from 'state/voting'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { isCoreProposal } from '../helpers'\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\nimport Layout from '../components/Layout'\nimport Details from './Details'\nimport Results from './Results'\nimport Vote from './Vote'\nimport Votes from './Votes'\n\nconst Proposal = () => {\n  const { id }: { id: string } = useParams()\n  const proposal = useGetProposal(id)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const votes = useGetVotes(id)\n  const voteLoadingStatus = useGetVotingStateLoadingStatus()\n  const proposalLoadingStatus = useGetProposalLoadingStatus()\n  const hasAccountVoted = account && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\n  const { id: proposalId = null, snapshot = null } = proposal ?? {}\n  const isPageLoading =\n    voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING\n\n  useEffect(() => {\n    dispatch(fetchProposal(id))\n  }, [id, dispatch])\n\n  // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\n  useEffect(() => {\n    const getVotes = async () => {\n      await dispatch(fetchVotes({ proposalId, block: Number(snapshot) }))\n      dispatch(verifyVotes({ proposalId, snapshot }))\n    }\n\n    if (proposalId && snapshot) {\n      getVotes()\n    }\n  }, [proposalId, snapshot, dispatch])\n\n  if (!proposal) {\n    return <PageLoader />\n  }\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"40px\">\n        <Button as={Link} to=\"/voting\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\n          {t('Back to Vote Overview')}\n        </Button>\n      </Box>\n      <Layout>\n        <Box>\n          <Box mb=\"32px\">\n            <Flex alignItems=\"center\" mb=\"8px\">\n              <ProposalStateTag proposalState={proposal.state} />\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\n            </Flex>\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\n              {proposal.title}\n            </Heading>\n            <Box>\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\n            </Box>\n          </Box>\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\n            <Vote proposal={proposal} mb=\"16px\" />\n          )}\n          <Votes votes={votes} />\n        </Box>\n        <Box>\n          <Details proposal={proposal} />\n          <Results choices={proposal.choices} votes={votes} />\n        </Box>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default Proposal\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnaphotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    const power = new BigNumber(vote.metadata?.votingPower)\n    return accum.plus(power)\n  }, BIG_ZERO)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMIN_ADDRESS = '0x6eaf1b33b8672c5dc40aB8f4bA3A0111723126c7'\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress\n","import { useSelector } from 'react-redux'\nimport { State } from '../types'\n\n// Voting\nexport const useGetProposals = () => {\n  const proposals = useSelector((state: State) => state.voting.proposals)\n  return Object.values(proposals)\n}\n\nexport const useGetProposal = (proposalId: string) => {\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\n  return proposal\n}\n\nexport const useGetVotes = (proposalId: string) => {\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\n}\n\nexport const useGetVotingStateLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\n  return votingStatus\n}\n\nexport const useGetProposalLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\n  return votingStatus\n}\n","import React from 'react'\nimport { TagProps } from 'components/_uikit'\nimport { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } from 'components/Tags'\nimport { ProposalState } from 'state/types'\n\ninterface ProposalStateTagProps extends TagProps {\n  proposalState: ProposalState\n}\n\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState, ...props }) => {\n  if (proposalState === ProposalState.ACTIVE) {\n    return <VoteNowTag {...props} />\n  }\n\n  if (proposalState === ProposalState.PENDING) {\n    return <SoonTag {...props} />\n  }\n\n  return <ClosedTag {...props} />\n}\n\ninterface ProposalTypeTagProps extends TagProps {\n  isCoreProposal: boolean\n}\n\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\n  if (isCoreProposal) {\n    return <CoreTag {...props} />\n  }\n\n  return <CommunityTag {...props} />\n}\n","import React from 'react'\nimport { Box, BoxProps } from 'components/_uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from 'components/_uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: BigNumber\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {total.toFormat(3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Syrup Pools')}\n        </Text>\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('CAKE BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n  total: BigNumber\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: BIG_ZERO,\n  cakeVaultBalance: BIG_ZERO,\n  cakePoolBalance: BIG_ZERO,\n  poolsBalance: BIG_ZERO,\n  cakeBnbLpBalance: BIG_ZERO,\n  total: BIG_ZERO,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: new BigNumber(cakeBalance),\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\n            cakePoolBalance: new BigNumber(cakePoolBalance),\n            poolsBalance: new BigNumber(poolsBalance),\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\n            total: new BigNumber(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading, Text } from 'components/_uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: Table,\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n"],"sourceRoot":""}